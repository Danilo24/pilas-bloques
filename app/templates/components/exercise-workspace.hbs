
<div class="flex layout-column {{if modoLecturaSimple 'aplicar-modo-lectura-simple'}}">
  
  <ExerciseDetails class="exercise-details" 
    @model={{model}}
    @cargando={{cargando}}
  />
  
  <div class="flex layout-row">
    <PaperCard class="flex-grow pilas-blockly-container">
      <PilasBlockly
          @guardar={{'guardar'}}
          @registrarPrimerCodigo={{'registrarPrimerCodigo'}}
          @modoDocente={{modoDocente}}
          @modoAlumno={{modoAlumno}}
          @hash={{hash}}
          @idAlumno={{idAlumno}}
          @codigo={{codigo}}
          @showCode={{showCode}}
          @cargando={{cargando}}
          @modelActividad={{model}}
          @cuandoEjecuta={{cuandoEjecuta}}
          @model={{model}}
          @pasoAPasoHabilitado={{model.debugging}}
          @persistirSolucionEnURL={{persistirSolucionEnURL}}
          @debeMostrarFinDeDesafio={{debeMostrarFinDeDesafio}}
          @pilas={{pilas}}
          @bloques={{model.bloques}}
          @onChangeWorkspace={{onChangeWorkspace}}
          @onTerminoEjecucion={{onTerminoEjecucion}}
      />
    </PaperCard>

    <Exercise class="flex-nogrow" {{!-- id="draggable" --}}
        @pilas={{pilas}}
        @escena={{model.escena}} 
        @onReady={{action "onReady"}}
        @cargando={{cargando}}
        @showStepByStepButtons={{debeMostrarPasoHabilitado}}
        @running={{ejecutando}}
        @pausedOnBreackpoint={{estaPausadoEnUnBreackpoint}}
        @enableTurboMode={{modoTuboHabilitado}}
        @step={{action 'step' true}}
        @step-by-step-execution={{action 'ejecutar' true}}
        @run={{action 'ejecutar' false}}
        @reset={{action 'reiniciar' false}}
        @onClick={{action 'updateTurboMode'}}
    />
  </div>

</div>

<Toast @message={{"Modo Turbo"}} @needShowToast={{needShowToast}}>
  {{if modoTuboHabilitado "ACTIVADO" "DESACTIVADO"}}
</Toast>

<script>

  //Make the DIV element draggagle:
    if (document.getElementById("draggable")) {
      makeDraggable(document.getElementById("draggable"));
    }

  function makeDraggable(elmnt) {
    var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;

    elmnt.onmousedown = onMouseDown;

    function onMouseDown(e) {
      e = e || window.event;
      e.preventDefault();
      // get the mouse cursor position at startup:
      pos3 = e.clientX;
      pos4 = e.clientY;
      document.onmouseup = onMouseUp;
      // call a function whenever the cursor moves:
      document.onmousemove = onMouseMove;
    }

    function onMouseMove(e) {
      e = e || window.event;
      e.preventDefault();
      // calculate the new cursor position:
      pos1 = pos3 - e.clientX;
      pos2 = pos4 - e.clientY;
      pos3 = e.clientX;
      pos4 = e.clientY;
      // set the element's new position:
      elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
      elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
    }

    function onMouseUp() {
      // stop moving when mouse button is released:
      document.onmouseup = null;
      document.onmousemove = null;
    }
  }

</script>